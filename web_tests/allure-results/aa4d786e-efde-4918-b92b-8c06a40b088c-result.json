{"name": "test_try_and_log_with_qbet_user", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "fixturefunc = <function login_iBet_user at 0x108764670>, request = <FixtureRequest for <Function test_try_and_log_with_qbet_user>>\nkwargs = {'pages': {'about_page': <pages.about_page.AboutPage object at 0x1089c3ca0>, 'login_page': <pages.login_page.LoginPage object at 0x1089c3970>, 'registration_page': <pages.registration_page.RegistrationPage object at 0x1089c3940>}}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n/opt/anaconda3/lib/python3.9/site-packages/_pytest/fixtures.py:890: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../qbet_web/web_tests/test_user_login.py:81: in login_iBet_user\n    pages[\"login_page\"].login_with_ibet_creds()\n../pages/login_page.py:60: in login_with_ibet_creds\n    self.click(self.LOGIN_BUTTON)\n../pages/base_page.py:41: in click\n    el = self._wait.until(expected_conditions.element_to_be_clickable(webelement))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"996c5805ed7640aff92f8f7b162a1950\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x108aab790>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/anaconda3/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException"}, "description": "/Users/razvan/Work/qbet_web/web_tests/features/login.feature: Try and log with Qbet user", "steps": [{"name": "User is not logged in.", "status": "passed", "steps": [{"name": "Checking if user is not logged in.", "status": "passed", "steps": [{"name": "Assert Message equals.", "status": "passed", "parameters": [{"name": "actual", "value": "True"}, {"name": "expected", "value": "True"}], "start": 1674519627301, "stop": 1674519627302}], "start": 1674519626114, "stop": 1674519627302}], "parameters": [{"name": "pages", "value": "{'about_page': <pages.about_page.AboutPage object at 0x1089c3ca0>, 'login_page': <pages.login_page.LoginPage object at 0x1089c3970>, 'registration_page': <pages.registration_page.RegistrationPage object at 0x1089c3940>}"}], "start": 1674519626113, "stop": 1674519627302}, {"name": "I go to the login menu I try to login with Qbet user.", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"/opt/anaconda3/lib/python3.9/site-packages/allure_commons/_allure.py\", line 180, in impl\n    return func(*a, **kw)\n  File \"/Users/razvan/Work/qbet_web/web_tests/test_user_login.py\", line 81, in login_iBet_user\n    pages[\"login_page\"].login_with_ibet_creds()\n  File \"/opt/anaconda3/lib/python3.9/site-packages/allure_commons/_allure.py\", line 180, in impl\n    return func(*a, **kw)\n  File \"/Users/razvan/Work/qa_qreen_web/pages/login_page.py\", line 60, in login_with_ibet_creds\n    self.click(self.LOGIN_BUTTON)\n  File \"/Users/razvan/Work/qa_qreen_web/pages/base_page.py\", line 41, in click\n    el = self._wait.until(expected_conditions.element_to_be_clickable(webelement))\n  File \"/opt/anaconda3/lib/python3.9/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "steps": [{"name": "I click on the OK cookies button pop up to close it.", "status": "passed", "start": 1674519627302, "stop": 1674519627343}, {"name": "Click Login link", "status": "passed", "start": 1674519627343, "stop": 1674519627392}, {"name": "Get page title", "status": "passed", "start": 1674519627393, "stop": 1674519627948}, {"name": "Assert Message equals.", "status": "passed", "parameters": [{"name": "actual", "value": "'Log in'"}, {"name": "expected", "value": "'Log in'"}], "start": 1674519627948, "stop": 1674519627948}, {"name": "Log in with username and password from new created user.", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"/opt/anaconda3/lib/python3.9/site-packages/allure_commons/_allure.py\", line 180, in impl\n    return func(*a, **kw)\n  File \"/Users/razvan/Work/qa_qreen_web/pages/login_page.py\", line 60, in login_with_ibet_creds\n    self.click(self.LOGIN_BUTTON)\n  File \"/Users/razvan/Work/qa_qreen_web/pages/base_page.py\", line 41, in click\n    el = self._wait.until(expected_conditions.element_to_be_clickable(webelement))\n  File \"/opt/anaconda3/lib/python3.9/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1674519627948, "stop": 1674519638523}], "parameters": [{"name": "pages", "value": "{'about_page': <pages.about_page.AboutPage object at 0x1089c3ca0>, 'login_page': <pages.login_page.LoginPage object at 0x1089c3970>, 'registration_page': <pages.registration_page.RegistrationPage object at 0x1089c3940>}"}], "start": 1674519627302, "stop": 1674519638524}], "attachments": [{"name": "log", "source": "551d9269-eca3-4bbe-ab83-df33ae748ed1-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "830d1e4c-5941-439e-a00a-8c52552fd5f1-attachment.txt", "type": "text/plain"}], "start": 1674519626113, "stop": 1674519638525, "uuid": "c27cd213-897b-4940-b031-6f0e7d877632", "historyId": "6d8c639fb10f0b965038cb3d3a3dd50b", "testCaseId": "7cb9ef65e44c87294e0f643d123231e8", "fullName": "test_user_login#test_try_and_log_with_qbet_user", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures"}, {"name": "suite", "value": "test_user_login"}, {"name": "host", "value": "Razvans-MacBook-Pro.local"}, {"name": "thread", "value": "32432-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_user_login"}]}