{"name": "test_register_new_user_and_then_log_in_with_the_newly_created_user", "status": "failed", "statusDetails": {"message": "AssertionError: soft assertion failures:\n1. Expected <500> to be equal to <200>, but was not.", "trace": "fixturefunc = <function register_new_user at 0x104684dc0>, request = <FixtureRequest for <Function test_register_new_user_and_then_log_in_with_the_newly_created_user>>, kwargs = {'context': {}}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n/opt/anaconda3/lib/python3.9/site-packages/_pytest/fixtures.py:890: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_user_login.py:46: in register_new_user\n    newRegisteredUserData = Player().registerNewUser()\n../api_resources/api_steps/player_steps.py:46: in registerNewUser\n    checkUser()\n../api_resources/api_steps/player_steps.py:37: in checkUser\n    BaseAssertions().assertEquals(sms_verification.status_code, 200)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api_core.microservices.apibase.assertions.userAssertions.BaseAssertions object at 0x1047e4460>, actual = 500, expected = 200\n\n    @step(\"Assert Message equals.\")\n    def assertEquals(self, actual, expected):\n        with soft_assertions():\n>           assert_that(actual).is_equal_to(expected)\nE           AssertionError: soft assertion failures:\nE           1. Expected <500> to be equal to <200>, but was not.\n\n../api_core/microservices/apibase/assertions/userAssertions.py:9: AssertionError"}, "description": "/Users/razvan/Work/qa_qreen_web/web_tests/features/login.feature: Register new user and then log in with the newly created user", "steps": [{"name": "User is not logged in.", "status": "passed", "steps": [{"name": "Checking if user is not logged in.", "status": "passed", "steps": [{"name": "Assert Message equals.", "status": "passed", "parameters": [{"name": "actual", "value": "True"}, {"name": "expected", "value": "True"}], "start": 1674567343851, "stop": 1674567343851}], "start": 1674567342474, "stop": 1674567343851}], "parameters": [{"name": "pages", "value": "{'about_page': <pages.about_page.AboutPage object at 0x1047b0370>, 'login_page': <pages.login_page.LoginPage object at 0x1047b0460>, 'registration_page': <pages.registration_page.RegistrationPage object at 0x1047b0520>}"}], "start": 1674567342474, "stop": 1674567343851}, {"name": "I create a new user.", "status": "failed", "statusDetails": {"message": "AssertionError: soft assertion failures:\n1. Expected <500> to be equal to <200>, but was not.\n", "trace": "  File \"/opt/anaconda3/lib/python3.9/site-packages/allure_commons/_allure.py\", line 180, in impl\n    return func(*a, **kw)\n  File \"/Users/razvan/Work/qa_qreen_web/web_tests/test_user_login.py\", line 46, in register_new_user\n    newRegisteredUserData = Player().registerNewUser()\n  File \"/opt/anaconda3/lib/python3.9/site-packages/allure_commons/_allure.py\", line 180, in impl\n    return func(*a, **kw)\n  File \"/Users/razvan/Work/qa_qreen_web/api_resources/api_steps/player_steps.py\", line 46, in registerNewUser\n    checkUser()\n  File \"/opt/anaconda3/lib/python3.9/site-packages/allure_commons/_allure.py\", line 180, in impl\n    return func(*a, **kw)\n  File \"/Users/razvan/Work/qa_qreen_web/api_resources/api_steps/player_steps.py\", line 37, in checkUser\n    BaseAssertions().assertEquals(sms_verification.status_code, 200)\n  File \"/opt/anaconda3/lib/python3.9/site-packages/allure_commons/_allure.py\", line 180, in impl\n    return func(*a, **kw)\n  File \"/Users/razvan/Work/qa_qreen_web/api_core/microservices/apibase/assertions/userAssertions.py\", line 9, in assertEquals\n    assert_that(actual).is_equal_to(expected)\n  File \"/opt/anaconda3/lib/python3.9/contextlib.py\", line 126, in __exit__\n    next(self.gen)\n  File \"/opt/anaconda3/lib/python3.9/site-packages/assertpy/assertpy.py\", line 120, in soft_assertions\n    raise AssertionError(out)\n"}, "steps": [{"name": "Generating used date all data is random except the arguments that are passed", "status": "passed", "parameters": [{"name": "userName", "value": "None"}, {"name": "firstName", "value": "None"}, {"name": "lastName", "value": "None"}, {"name": "email", "value": "None"}, {"name": "password", "value": "None"}, {"name": "phone", "value": "None"}, {"name": "dateOfBirth", "value": "None"}, {"name": "street", "value": "None"}, {"name": "postCode", "value": "None"}, {"name": "city", "value": "None"}, {"name": "countryCode", "value": "None"}], "start": 1674567343851, "stop": 1674567343863}, {"name": "Api calls to register a new user.", "status": "failed", "statusDetails": {"message": "AssertionError: soft assertion failures:\n1. Expected <500> to be equal to <200>, but was not.\n", "trace": "  File \"/opt/anaconda3/lib/python3.9/site-packages/allure_commons/_allure.py\", line 180, in impl\n    return func(*a, **kw)\n  File \"/Users/razvan/Work/qa_qreen_web/api_resources/api_steps/player_steps.py\", line 46, in registerNewUser\n    checkUser()\n  File \"/opt/anaconda3/lib/python3.9/site-packages/allure_commons/_allure.py\", line 180, in impl\n    return func(*a, **kw)\n  File \"/Users/razvan/Work/qa_qreen_web/api_resources/api_steps/player_steps.py\", line 37, in checkUser\n    BaseAssertions().assertEquals(sms_verification.status_code, 200)\n  File \"/opt/anaconda3/lib/python3.9/site-packages/allure_commons/_allure.py\", line 180, in impl\n    return func(*a, **kw)\n  File \"/Users/razvan/Work/qa_qreen_web/api_core/microservices/apibase/assertions/userAssertions.py\", line 9, in assertEquals\n    assert_that(actual).is_equal_to(expected)\n  File \"/opt/anaconda3/lib/python3.9/contextlib.py\", line 126, in __exit__\n    next(self.gen)\n  File \"/opt/anaconda3/lib/python3.9/site-packages/assertpy/assertpy.py\", line 120, in soft_assertions\n    raise AssertionError(out)\n"}, "steps": [{"name": "Create payload for new user registration step one.", "status": "passed", "parameters": [{"name": "firstName", "value": "None"}, {"name": "lastName", "value": "None"}, {"name": "email", "value": "None"}, {"name": "mobilePhone", "value": "None"}, {"name": "password", "value": "None"}], "start": 1674567343873, "stop": 1674567343873}, {"name": "First step register new user.", "status": "passed", "steps": [{"name": "POST request to: https://zsz7drf3re.execute-api.eu-west-1.amazonaws.com/dev/api/v1/player/registration", "status": "passed", "start": 1674567343874, "stop": 1674567344118}], "parameters": [{"name": "payload", "value": "'{\"firstName\": \"AUTOTESTChristopher\", \"lastName\": \"Kim\", \"email\": \"qarrbet+16592@gmail.com\", \"mobilePhone\": \"+3587202775\", \"password\": \"QAPassword1!\"}'"}], "start": 1674567343873, "stop": 1674567344119}, {"name": "Create payload for new user registration step two.", "status": "passed", "parameters": [{"name": "dateOfBirth", "value": "None"}, {"name": "postCode", "value": "None"}, {"name": "city", "value": "None"}, {"name": "street", "value": "None"}, {"name": "playerId", "value": "29682"}], "start": 1674567344119, "stop": 1674567344119}, {"name": "Second step register new user.", "status": "passed", "steps": [{"name": "PUT request to: https://zsz7drf3re.execute-api.eu-west-1.amazonaws.com/dev/api/v1/player/registration", "status": "passed", "start": 1674567344120, "stop": 1674567344298}], "parameters": [{"name": "payload", "value": "'{\"playerId\": 29682, \"currencyCode\": \"EUR\", \"gender\": \"m\", \"street\": \"Adkins Points\", \"city\": \"East Sarahmouth\", \"marketingOptIn\": true, \"cookiePolicyAccepted\": true, \"allConditions\": true, \"mediaTag\": null, \"provinceCode\": null, \"termsAndConditionsAcceptedVersion\": 5, \"dateOfBirth\": \"1967-06-02\", \"postalCode\": \"41446\", \"countryCode\": \"FI\", \"termsAndConditionsAccepted\": true, \"languageCode\": \"en\"}'"}], "start": 1674567344119, "stop": 1674567344298}, {"name": "Create sms request payload", "status": "passed", "parameters": [{"name": "playerId", "value": "29682"}], "start": 1674567344298, "stop": 1674567344299}, {"name": "Request SMS", "status": "passed", "steps": [{"name": "POST request to: https://zsz7drf3re.execute-api.eu-west-1.amazonaws.com/dev/api/v1/player/registration/sms_request", "status": "passed", "start": 1674567344300, "stop": 1674567344542}], "parameters": [{"name": "payload", "value": "'{\"playerId\": 29682}'"}], "start": 1674567344299, "stop": 1674567344542}, {"name": "Send SMS verification payload", "status": "passed", "parameters": [{"name": "playerId", "value": "29682"}], "start": 1674567344542, "stop": 1674567344542}, {"name": "Send SMS confirmation", "status": "passed", "steps": [{"name": "POST request to: https://zsz7drf3re.execute-api.eu-west-1.amazonaws.com/dev/api/v1/player/registration/sms_verification", "status": "passed", "start": 1674567344543, "stop": 1674567344655}], "parameters": [{"name": "payload", "value": "'{\"playerId\": 29682, \"password\": \"QAPassword1!\", \"code\": \"1111\"}'"}], "start": 1674567344542, "stop": 1674567344655}, {"name": "Verify user data has been created.", "status": "failed", "statusDetails": {"message": "AssertionError: soft assertion failures:\n1. Expected <500> to be equal to <200>, but was not.\n", "trace": "  File \"/opt/anaconda3/lib/python3.9/site-packages/allure_commons/_allure.py\", line 180, in impl\n    return func(*a, **kw)\n  File \"/Users/razvan/Work/qa_qreen_web/api_resources/api_steps/player_steps.py\", line 37, in checkUser\n    BaseAssertions().assertEquals(sms_verification.status_code, 200)\n  File \"/opt/anaconda3/lib/python3.9/site-packages/allure_commons/_allure.py\", line 180, in impl\n    return func(*a, **kw)\n  File \"/Users/razvan/Work/qa_qreen_web/api_core/microservices/apibase/assertions/userAssertions.py\", line 9, in assertEquals\n    assert_that(actual).is_equal_to(expected)\n  File \"/opt/anaconda3/lib/python3.9/contextlib.py\", line 126, in __exit__\n    next(self.gen)\n  File \"/opt/anaconda3/lib/python3.9/site-packages/assertpy/assertpy.py\", line 120, in soft_assertions\n    raise AssertionError(out)\n"}, "steps": [{"name": "Assert Message equals.", "status": "passed", "parameters": [{"name": "actual", "value": "200"}, {"name": "expected", "value": "200"}], "start": 1674567344655, "stop": 1674567344656}, {"name": "Assert Message equals.", "status": "failed", "statusDetails": {"message": "AssertionError: soft assertion failures:\n1. Expected <500> to be equal to <200>, but was not.\n", "trace": "  File \"/opt/anaconda3/lib/python3.9/site-packages/allure_commons/_allure.py\", line 180, in impl\n    return func(*a, **kw)\n  File \"/Users/razvan/Work/qa_qreen_web/api_core/microservices/apibase/assertions/userAssertions.py\", line 9, in assertEquals\n    assert_that(actual).is_equal_to(expected)\n  File \"/opt/anaconda3/lib/python3.9/contextlib.py\", line 126, in __exit__\n    next(self.gen)\n  File \"/opt/anaconda3/lib/python3.9/site-packages/assertpy/assertpy.py\", line 120, in soft_assertions\n    raise AssertionError(out)\n"}, "parameters": [{"name": "actual", "value": "500"}, {"name": "expected", "value": "200"}], "start": 1674567344656, "stop": 1674567344656}], "start": 1674567344655, "stop": 1674567344657}], "start": 1674567343873, "stop": 1674567344658}], "parameters": [{"name": "context", "value": "{}"}], "start": 1674567343851, "stop": 1674567344658}], "attachments": [{"name": "log", "source": "d82eb918-173b-4158-8f87-0769283c6669-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "1eaf4a3e-d2a1-48dc-9802-185dfe6a3305-attachment.txt", "type": "text/plain"}], "start": 1674567342472, "stop": 1674567344659, "uuid": "3ca04ee4-bb1c-4344-befa-eb75583151b0", "historyId": "98d71767ca49e70a5c23dc7c403460b6", "testCaseId": "790bb64e52e703891fb80becf4a47d21", "fullName": "test_user_login#test_register_new_user_and_then_log_in_with_the_newly_created_user", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures"}, {"name": "suite", "value": "test_user_login"}, {"name": "host", "value": "Razvans-MacBook-Pro.local"}, {"name": "thread", "value": "37295-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_user_login"}]}